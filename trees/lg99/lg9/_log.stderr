/home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py:99: NumbaWarning: 
Compilation is falling back to object mode WITH looplifting enabled because Function "compute_distance_mat" failed type inference due to: Untyped global name 'tqdm': cannot determine Numba type of <class 'type'>

File "../../../../../../../../../home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py", line 104:
def compute_distance_mat(cm, C, priors=None):
    <source elided>
    k = 0
    for i in tqdm(range(C-1), desc = 'solving distance matrix'):
    ^

  @jit(parallel=True)
/home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py:99: NumbaWarning: 
Compilation is falling back to object mode WITHOUT looplifting enabled because Function "compute_distance_mat" failed type inference due to: cannot determine Numba type of <class 'numba.dispatcher.LiftedLoop'>

File "../../../../../../../../../home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py", line 104:
def compute_distance_mat(cm, C, priors=None):
    <source elided>
    k = 0
    for i in tqdm(range(C-1), desc = 'solving distance matrix'):
    ^

  @jit(parallel=True)
/home/eecs/mattjones/anaconda3/envs/py36/lib/python3.6/site-packages/numba/compiler.py:725: NumbaWarning: Function "compute_distance_mat" was compiled in object mode without forceobj=True, but has lifted loops.

File "../../../../../../../../../home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py", line 100:
@jit(parallel=True)
def compute_distance_mat(cm, C, priors=None):
^

  self.func_ir.loc))
/home/eecs/mattjones/anaconda3/envs/py36/lib/python3.6/site-packages/numba/compiler.py:734: NumbaDeprecationWarning: 
Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour.

For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit

File "../../../../../../../../../home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py", line 100:
@jit(parallel=True)
def compute_distance_mat(cm, C, priors=None):
^

  warnings.warn(errors.NumbaDeprecationWarning(msg, self.func_ir.loc))
/home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py:99: NumbaWarning: 
Compilation is falling back to object mode WITHOUT looplifting enabled because Function "compute_distance_mat" failed type inference due to: Untyped global name 'tqdm': cannot determine Numba type of <class 'type'>

File "../../../../../../../../../home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py", line 104:
def compute_distance_mat(cm, C, priors=None):
    <source elided>
    k = 0
    for i in tqdm(range(C-1), desc = 'solving distance matrix'):
    ^

  @jit(parallel=True)
/home/eecs/mattjones/anaconda3/envs/py36/lib/python3.6/site-packages/numba/compiler.py:725: NumbaWarning: Function "compute_distance_mat" was compiled in object mode without forceobj=True.

File "../../../../../../../../../home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py", line 104:
def compute_distance_mat(cm, C, priors=None):
    <source elided>
    k = 0
    for i in tqdm(range(C-1), desc = 'solving distance matrix'):
    ^

  self.func_ir.loc))
/home/eecs/mattjones/anaconda3/envs/py36/lib/python3.6/site-packages/numba/compiler.py:734: NumbaDeprecationWarning: 
Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour.

For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit

File "../../../../../../../../../home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py", line 104:
def compute_distance_mat(cm, C, priors=None):
    <source elided>
    k = 0
    for i in tqdm(range(C-1), desc = 'solving distance matrix'):
    ^

  warnings.warn(errors.NumbaDeprecationWarning(msg, self.func_ir.loc))
/home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py:99: NumbaWarning: 
Compilation is falling back to object mode WITHOUT looplifting enabled because Function "compute_distance_mat" failed type inference due to: Untyped global name 'tqdm': cannot determine Numba type of <class 'type'>

File "../../../../../../../../../home/eecs/mattjones/.local/lib/python3.6/site-packages/Cassiopeia/TreeSolver/reconstruct_tree.py", line 104:
def compute_distance_mat(cm, C, priors=None):
    <source elided>
    k = 0
    for i in tqdm(range(C-1), desc = 'solving distance matrix'):
    ^

  @jit(parallel=True)
solving distance matrix:   0%|          | 0/543 [00:00<?, ?it/s]solving distance matrix:   0%|          | 1/543 [00:00<00:59,  9.06it/s]solving distance matrix:   1%|          | 3/543 [00:00<00:50, 10.74it/s]solving distance matrix:   1%|          | 5/543 [00:00<00:44, 12.21it/s]solving distance matrix:   1%|▏         | 8/543 [00:00<00:37, 14.13it/s]solving distance matrix:   2%|▏         | 10/543 [00:00<00:38, 13.74it/s]solving distance matrix:   2%|▏         | 13/543 [00:00<00:33, 15.71it/s]solving distance matrix:   3%|▎         | 15/543 [00:00<00:31, 16.79it/s]solving distance matrix:   3%|▎         | 18/543 [00:00<00:28, 18.69it/s]solving distance matrix:   4%|▍         | 21/543 [00:01<00:26, 20.04it/s]solving distance matrix:   4%|▍         | 24/543 [00:01<00:24, 21.41it/s]solving distance matrix:   5%|▍         | 27/543 [00:01<00:23, 21.59it/s]solving distance matrix:   6%|▌         | 30/543 [00:01<00:22, 22.56it/s]solving distance matrix:   6%|▌         | 33/543 [00:01<00:21, 23.40it/s]solving distance matrix:   7%|▋         | 36/543 [00:01<00:21, 23.60it/s]solving distance matrix:   7%|▋         | 39/543 [00:01<00:21, 23.78it/s]solving distance matrix:   8%|▊         | 42/543 [00:01<00:20, 24.03it/s]solving distance matrix:   8%|▊         | 45/543 [00:02<00:20, 23.87it/s]solving distance matrix:   9%|▉         | 48/543 [00:02<00:20, 24.06it/s]solving distance matrix:   9%|▉         | 51/543 [00:02<00:20, 23.94it/s]solving distance matrix:  10%|▉         | 54/543 [00:02<00:20, 23.89it/s]solving distance matrix:  10%|█         | 57/543 [00:02<00:19, 24.49it/s]solving distance matrix:  11%|█         | 60/543 [00:02<00:19, 24.36it/s]solving distance matrix:  12%|█▏        | 63/543 [00:02<00:19, 24.42it/s]solving distance matrix:  12%|█▏        | 66/543 [00:02<00:20, 23.73it/s]solving distance matrix:  13%|█▎        | 70/543 [00:03<00:18, 25.08it/s]solving distance matrix:  13%|█▎        | 73/543 [00:03<00:19, 24.27it/s]solving distance matrix:  14%|█▍        | 76/543 [00:03<00:19, 24.12it/s]solving distance matrix:  15%|█▍        | 79/543 [00:03<00:19, 23.46it/s]solving distance matrix:  15%|█▌        | 82/543 [00:03<00:19, 23.16it/s]solving distance matrix:  16%|█▌        | 85/543 [00:03<00:18, 24.25it/s]solving distance matrix:  16%|█▌        | 88/543 [00:03<00:17, 25.40it/s]solving distance matrix:  17%|█▋        | 92/543 [00:03<00:16, 27.99it/s]solving distance matrix:  17%|█▋        | 95/543 [00:04<00:16, 27.88it/s]solving distance matrix:  18%|█▊        | 99/543 [00:04<00:15, 29.19it/s]solving distance matrix:  19%|█▉        | 103/543 [00:04<00:14, 29.65it/s]solving distance matrix:  20%|█▉        | 107/543 [00:04<00:14, 29.59it/s]solving distance matrix:  20%|██        | 110/543 [00:04<00:14, 29.47it/s]solving distance matrix:  21%|██        | 113/543 [00:04<00:14, 29.25it/s]solving distance matrix:  21%|██▏       | 116/543 [00:04<00:14, 29.26it/s]solving distance matrix:  22%|██▏       | 120/543 [00:04<00:13, 30.40it/s]solving distance matrix:  23%|██▎       | 124/543 [00:05<00:14, 29.88it/s]solving distance matrix:  24%|██▎       | 128/543 [00:05<00:13, 30.10it/s]solving distance matrix:  24%|██▍       | 132/543 [00:05<00:14, 28.87it/s]solving distance matrix:  25%|██▌       | 136/543 [00:05<00:13, 30.17it/s]solving distance matrix:  26%|██▌       | 140/543 [00:05<00:13, 30.68it/s]solving distance matrix:  27%|██▋       | 144/543 [00:05<00:13, 30.35it/s]solving distance matrix:  27%|██▋       | 148/543 [00:05<00:13, 29.62it/s]solving distance matrix:  28%|██▊       | 152/543 [00:05<00:12, 30.29it/s]solving distance matrix:  29%|██▊       | 156/543 [00:06<00:12, 31.33it/s]solving distance matrix:  29%|██▉       | 160/543 [00:06<00:11, 32.18it/s]solving distance matrix:  30%|███       | 164/543 [00:06<00:11, 33.41it/s]solving distance matrix:  31%|███       | 168/543 [00:06<00:10, 34.25it/s]solving distance matrix:  32%|███▏      | 172/543 [00:06<00:10, 34.34it/s]solving distance matrix:  32%|███▏      | 176/543 [00:06<00:10, 34.76it/s]solving distance matrix:  33%|███▎      | 180/543 [00:06<00:10, 35.80it/s]solving distance matrix:  34%|███▍      | 184/543 [00:06<00:10, 35.33it/s]solving distance matrix:  35%|███▍      | 188/543 [00:06<00:10, 34.89it/s]solving distance matrix:  35%|███▌      | 192/543 [00:07<00:10, 34.94it/s]solving distance matrix:  36%|███▌      | 196/543 [00:07<00:09, 35.19it/s]solving distance matrix:  37%|███▋      | 200/543 [00:07<00:09, 35.50it/s]solving distance matrix:  38%|███▊      | 204/543 [00:07<00:09, 35.64it/s]solving distance matrix:  38%|███▊      | 208/543 [00:07<00:09, 36.50it/s]solving distance matrix:  39%|███▉      | 212/543 [00:07<00:09, 36.02it/s]solving distance matrix:  40%|███▉      | 217/543 [00:07<00:08, 36.96it/s]solving distance matrix:  41%|████      | 222/543 [00:07<00:08, 36.64it/s]solving distance matrix:  42%|████▏     | 226/543 [00:08<00:09, 35.05it/s]solving distance matrix:  42%|████▏     | 230/543 [00:08<00:08, 35.99it/s]solving distance matrix:  43%|████▎     | 234/543 [00:08<00:08, 37.00it/s]solving distance matrix:  44%|████▍     | 238/543 [00:08<00:08, 34.64it/s]solving distance matrix:  45%|████▍     | 242/543 [00:08<00:08, 34.71it/s]solving distance matrix:  45%|████▌     | 246/543 [00:08<00:08, 36.10it/s]solving distance matrix:  46%|████▌     | 251/543 [00:08<00:07, 38.37it/s]solving distance matrix:  47%|████▋     | 256/543 [00:08<00:07, 39.59it/s]solving distance matrix:  48%|████▊     | 261/543 [00:08<00:06, 42.11it/s]solving distance matrix:  49%|████▉     | 266/543 [00:09<00:06, 41.82it/s]solving distance matrix:  50%|████▉     | 271/543 [00:09<00:06, 42.18it/s]solving distance matrix:  51%|█████     | 276/543 [00:09<00:06, 41.98it/s]solving distance matrix:  52%|█████▏    | 281/543 [00:09<00:06, 42.36it/s]solving distance matrix:  53%|█████▎    | 286/543 [00:09<00:06, 42.54it/s]solving distance matrix:  54%|█████▎    | 291/543 [00:09<00:05, 42.86it/s]solving distance matrix:  55%|█████▍    | 296/543 [00:09<00:05, 43.38it/s]solving distance matrix:  55%|█████▌    | 301/543 [00:09<00:05, 44.90it/s]solving distance matrix:  56%|█████▋    | 306/543 [00:09<00:05, 41.28it/s]solving distance matrix:  57%|█████▋    | 311/543 [00:10<00:05, 43.11it/s]solving distance matrix:  58%|█████▊    | 317/543 [00:10<00:04, 46.64it/s]solving distance matrix:  59%|█████▉    | 323/543 [00:10<00:04, 49.02it/s]solving distance matrix:  61%|██████    | 329/543 [00:10<00:04, 51.08it/s]solving distance matrix:  62%|██████▏   | 335/543 [00:10<00:03, 52.36it/s]solving distance matrix:  63%|██████▎   | 341/543 [00:10<00:03, 53.02it/s]solving distance matrix:  64%|██████▍   | 347/543 [00:10<00:03, 54.13it/s]solving distance matrix:  65%|██████▌   | 354/543 [00:10<00:03, 55.57it/s]solving distance matrix:  66%|██████▋   | 361/543 [00:10<00:03, 58.33it/s]solving distance matrix:  68%|██████▊   | 368/543 [00:11<00:02, 60.53it/s]solving distance matrix:  69%|██████▉   | 376/543 [00:11<00:02, 64.66it/s]solving distance matrix:  71%|███████   | 384/543 [00:11<00:02, 67.29it/s]solving distance matrix:  72%|███████▏  | 392/543 [00:11<00:02, 69.99it/s]solving distance matrix:  74%|███████▍  | 401/543 [00:11<00:01, 74.26it/s]solving distance matrix:  76%|███████▌  | 411/543 [00:11<00:01, 80.24it/s]solving distance matrix:  78%|███████▊  | 421/543 [00:11<00:01, 84.62it/s]solving distance matrix:  80%|███████▉  | 432/543 [00:11<00:01, 90.75it/s]solving distance matrix:  82%|████████▏ | 444/543 [00:11<00:01, 96.43it/s]solving distance matrix:  84%|████████▍ | 458/543 [00:11<00:00, 105.62it/s]solving distance matrix:  87%|████████▋ | 473/543 [00:12<00:00, 114.99it/s]solving distance matrix:  90%|████████▉ | 488/543 [00:12<00:00, 122.81it/s]solving distance matrix:  96%|█████████▌| 520/543 [00:12<00:00, 150.31it/s]solving distance matrix: 100%|██████████| 543/543 [00:12<00:00, 44.17it/s] 
0it [00:00, ?it/s]1086it [00:00, 27040.91it/s]
